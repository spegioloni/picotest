---
---

@use "pico";

@font-face {
  font-family: "LeagueSpartan";
  src: url("/assets/fonts/LeagueSpartan/LeagueSpartan-VariableFont_wght.ttf")
    format("truetype");
  font-display: swap;
}

@font-face {
  font-family: "Quicksand";
  src: url("/assets/fonts/Quicksand/Quicksand-VariableFont_wght.ttf")
    format("truetype");
  font-display: swap;
}

body {
  font-family: Quicksand system-ui, sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: LeagueSpartan, system-ui, sans-serif;
  text-transform: uppercase;
  letter-spacing: -0.05em;
  font-weight: 800;
}

.customgradient {
  background: linear-gradient(
    to right,
    var(--pico-primary),
    var(--pico-secondary)
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.price {
  font-size: 1.5rem;
  color: var(--pico-primary);
  font-weight: 700;
}

ul.checkmark > li::before {
  content: "âœ“ ";
}

#hero {
  height: 60vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

#hero hgroup h1 {
  font-size: 5rem;
}

@media only screen and (max-width: 600px) {
  #hero hgroup h1 {
    font-size: 4rem;
  }
}

#Logo,a:hover {
  transform: scale(105%);
  transition: all 0.1s ease-in;
}

.customFooter{
  background-color: var(--pico-color);
  color: var(--pico-background-color);
  fill: var(--pico-background-color)
}

//Logo and Animation -----------------------------------------

#LogoDiv {
  border-radius: var(--pico-border-radius);
  border: var(--pico-border-width) solid var(--pico-secondary);
  padding: 0.1rem 0.2rem;
  animation: borderAnimation 1.2s ease-in forwards;
}

#frame path:nth-child(1) {
  animation: letterAnimation .3s ease-in 0s forwards;
} 
#frame path:nth-child(2) {
  animation: letterAnimation .3s ease-in .1s forwards;
} 
#frame path:nth-child(3) {
  animation: letterAnimation .3s ease-in .2s forwards;
} 
#frame path:nth-child(4) {
  animation: letterAnimation .3s ease-in .3s forwards;
} 
#frame path:nth-child(5) {
  animation: letterAnimation .3s ease-in .4s forwards;
} 

@keyframes borderAnimation {
  0% {
    border-color: rgba(0,0,0,0);
  }
  80% {
    border-color: rgba(0,0,0,0);
  }
  100% {
    border-color: var(--pico-scondary);
  }
  
}

@keyframes letterAnimation {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

//Stars animation ---------------------------------------------------

.diagonal-hero-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background: var(--pico-background-color); /* fallback for old browsers */
  background: -webkit-linear-gradient(
    to right,
    var(--pico-background-color),
    var(--pico-secondary)
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(
    to right,
    var(--pico-background-color),
    var(--pico-secondary)
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

  z-index: -1;
}

// creates randomized star sizes
@function stars($n) {
  $value: "#{random(2000)}px #{random(2000)}px #767676";
  @for $i from 2 through $n {
    $value: "#{$value} , #{random(2000)}px #{random(2000)}px #767676";
  }
  @return unquote($value);
}

// store random stars
$stars-small: stars(700);
$stars-medium: stars(200);
$stars-big: stars(100);

.stars {
  z-index: -1;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  transition: opacity 1s ease-in-out;
}

.stars > .small {
  width: 1px;
  height: 1px;
  background: transparent;
  box-shadow: $stars-small;
  animation: starsAnimation 50s linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: 1px;
    height: 1px;
    background: transparent;
    box-shadow: $stars-small;
  }
}

.stars > .medium {
  width: 2px;
  height: 2px;
  background: transparent;
  box-shadow: $stars-medium;
  animation: starsAnimation 100s linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: 2px;
    height: 2px;
    background: transparent;
    box-shadow: $stars-medium;
  }
}

.stars > .big {
  width: 3px;
  height: 3px;
  background: transparent;
  box-shadow: $stars-big;
  border-radius: 100%;
  animation: starsAnimation 150s linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: 3px;
    height: 3px;
    background: transparent;
    box-shadow: $stars-big;
    border-radius: 100%;
  }
}

// swap from/to values to reverse animation
@keyframes starsAnimation {
  from {
    transform: translateY(-2000px);
  }
  to {
    transform: translateY(0px);
  }
}
